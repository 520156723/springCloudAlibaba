server:
  port: 8081

spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:mysql://localhost:3306/user_center
    hikari:
      username: root
      password: 263519
      # >= 6.x: com.mysql.cj.jdbc.Driver
      # <= 5.x: com.mysql.jdbc.Driver
      driver-class-name: com.mysql.cj.jdbc.Driver
  cloud:
    nacos:
      discovery:
        # nacos的service地址
        server-addr: localhost:8848
        # 该服务属于的cluster名称
        cluster-name: BJ
        #元数据 k-v形式去定义
        metadata:
          #自己的版本
          version: v1
          #调用目标微服务的版本
          target-version: v1
        # 命名空间做隔离 这是dev的
        #namespace: 80a433f7-255c-4acd-a25b-ad53c7aa1628
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:9876
      # 连接桥梁
      bindings:
        # 这个input是Sink里面的INPUT，通过ioc注入
        input:
          # 指定topic
          destination: add-bonus
          # 消费组
          group: binder-group
#        # 自定义input接口
#        my-input:
#          destination: stream-my-topic
#          group: my-group
  application:
    # 服务名称用-而不是_
    name: user-center
  zipkin:
    base-url: http://localhost:9411/
    # 让nacos不会把上面的url当做服务名称
    discoveryClientEnabled: false
  sleuth:
    # 抽样率 默认0.1（10%）
    sampler:
      # 全部监控数据上报数据库（生产不建议1.0）
      probability: 1.0

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
# actuator里的info信息
info:
  app-name: spring-boot-demo
  author: hqd
  email: xxx@qq.com

## rocketmq
#rocketmq:
#  name-server: 127.0.0.1:9876

#修改某个包下生成的日志级别
logging:
  level:
    # per.hqd: debug
    # 配置Feign的日志级别，建立在UserCenterFeignClient的日志级别是debug的基础上的
    # per.hqd.contentcenter.feignClient.UserCenterFeignClient: debug
    # 避免控制台一直打印心跳信息
    com.alibaba.nacos: error
    # 为sleuth打印更多日志
    org.springframework.cloud.sleuth: debug

# jwt配置
jwt:
  secret: hqqqqqqqdddddddddddddddddddddddddddddd
  # 有效期，单位秒，默认2周
  expire-time-in-second: 240
---
spring:
  config:
    activate:
      on-profile: dev

---
spring:
  config:
    activate:
      on-profile: prod
server:
  tomcat:
    max-connections: 1000
    threads:
      max: 300